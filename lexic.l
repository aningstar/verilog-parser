%%

"always"              { printf("ALWAYS"); }
"and"                 { printf("AND"); }
"assign"              { printf("ASSIGN"); }
"automatic"           { printf("AUTOMATIC"); }
"begin"               { printf("BEGIN"); }
"buf"                 { printf("BUF"); }
"bufif0"              { printf("BUFIF0"); }
"bufif1"              { printf("BUFIF1"); }
"case"                { printf("CASE"); }
"casex"               { printf("CASEX"); }
"casez"               { printf("CASEZ"); }
"cell"                { printf("CELL"); }
"cmos"                { printf("CMOS"); }
"config"              { printf("CONFIG"); }
"deassign"            { printf("DEASSIGN"); }
"default"             { printf("DEFAULT"); }
"defparam"            { printf("DEFPARAM"); }
"design"              { printf("DESIGN"); }
"disable"             { printf("DISABLE"); }
"edge"                { printf("EDGE"); }
"else"                { printf("ELSE"); }
"end"                 { printf("END"); }
"endcase"             { printf("ENDCASE"); }
"endconfig"           { printf("ENDCONFIG"); }
"endfunction"         { printf("ENDFUNCTION"); }
"endgenerate"         { printf("ENDGENERATE"); }
"endmodule"           { printf("ENDMODULE"); }
"endprimitive"        { printf("ENDPRIMITIVE"); }
"endspecify"          { printf("ENDSPECIFY"); }
"endtable"            { printf("ENDTABLE"); }
"endtask"             { printf("ENDTASK"); }
"event"               { printf("EVENT"); }
"for"                 { printf("FOR"); }
"force"               { printf("FORCE"); }
"forever"             { printf("FOREVER"); }
"fork"                { printf("FORK"); }
"function"            { printf("FUNCTION"); }
"generate"            { printf("GENERATE"); }
"genvar"              { printf("GENVAR"); }
"highz0"              { printf("HIGHZ0"); }
"highz1"              { printf("HIGHZ1"); }
"if"                  { printf("IF"); }
"ifnone"              { printf("IFNONE"); }
"initial"             { printf("INITIAL"); }
"instance"            { printf("INSTANCE"); }
"inout"               { printf("INOUT"); }
"input"               { printf("INPUT"); }
"integer"             { printf("INTEGER"); }
"join"                { printf("JOIN"); }
"large"               { printf("LARGE"); }
"liblist"             { printf("LIBLIST"); }
"localparam"          { printf("LOCALPARAM"); }
"macromodule"         { printf("MACROMODULE"); }
"medium"              { printf("MEDIUM"); }
"module"              { printf("MODULE"); }
"nand"                { printf("NAND"); }
"negedge"             { printf("NEGEDGE"); }
"nmos"                { printf("NMOS"); }
"nor"                 { printf("NOR"); }
"not"                 { printf("NOT"); }
"noshowcancelled"     { printf("NOSHOWCANCELLED"); } 
"notif0"              { printf("NOTIF0"); }
"notif1"              { printf("NOTIF1"); }
"or"                  { printf("OR"); }
"output"              { printf("OUTPUT"); }
"parameter"           { printf("PARAMETER"); }
"pmos"                { printf("PMOS"); }
"posedge"             { printf("POSEDGE"); }
"primitive"           { printf("PRIMITIVE"); }
"pull0"               { printf("PULL0"); }
"pull1"               { printf("PULL1"); }
"pulldown"            { printf("PULLDOWN"); }
"pullup"              { printf("PULLUP"); }
"pulsestyle_onevent"  { printf("PULSESTYLE_ONEVENT"); }
"pulsestyle_ondetect" { printf("PULSESTYLE_ONDETECT"); }
"rcmos"               { printf("RCMOS"); }
"real"                { printf("REAL"); }
"realtime"            { printf("REALTIME"); }
"reg"                 { printf("REG"); }
"release"             { printf("RELEASE"); }
"repeat"              { printf("REPEAT"); }
"rnmos"               { printf("RNMOS"); }
"rpmos"               { printf("RPMOS"); }
"rtran"               { printf("RTRAN"); }
"rtranif0"            { printf("RTRANIF0"); }
"rtranif1"            { printf("RTRANIF1"); }
"scalared"            { printf("SCALARED"); }
"signed"              { printf("SIGNED"); }
"showcancelled"       { printf("SHOWCANCELLED"); }
"small"               { printf("SMALL"); }
"specify"             { printf("SPECIFY"); }
"specparam"           { printf("SPECPARAM"); }
"strength"            { printf("STRENGTH"); }
"strong0"             { printf("STRONG0"); }
"strong1"             { printf("STRONG1"); }
"supply0"             { printf("SUPPLY0"); }
"supply1"             { printf("SUPPLY1"); }
"table"               { printf("TABLE"); }
"task"                { printf("TASK"); }
"time"                { printf("TIME"); }
"tran"                { printf("TRAN"); }
"tranif0"             { printf("TRANIF0"); }
"tranif1"             { printf("TRANIF1"); }
"tri"                 { printf("TRI"); }
"tri0"                { printf("TRI0"); }
"tri1"                { printf("TRI1"); }
"triand"              { printf("TRIAND"); }
"trior"               { printf("TRIOR"); }
"trireg"              { printf("TRIREG"); }
"unsigned"            { printf("UNSIGNED"); }
"use"                 { printf("USE"); }
"vectored"            { printf("VECTORED"); }
"wait"                { printf("WAIT"); }
"wand"                { printf("WAND"); }
"weak0"               { printf("WEAK0"); }
"weak1"               { printf("WEAK1"); }
"while"               { printf("WHILE"); }
"wire"                { printf("WIRE"); }
"wor"                 { printf("WOR"); }
"xnor"                { printf("XNOR"); }
"xor"                 { printf("XOR"); }

%%
